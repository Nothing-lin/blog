<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nothinglin的个人博客</title>
  
  <subtitle>NothingLin</subtitle>
  <link href="https://nothinglin.top/atom.xml" rel="self"/>
  
  <link href="https://nothinglin.top/"/>
  <updated>2021-04-10T16:39:52.450Z</updated>
  <id>https://nothinglin.top/</id>
  
  <author>
    <name>NothingLin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【第02天】30天Java核心编程技术基础</title>
    <link href="https://nothinglin.top/2021/04/10/java%E6%A0%B8%E5%BF%83%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF/%E3%80%90%E7%AC%AC02%E5%A4%A9%E3%80%9130%E5%A4%A9Java%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80/"/>
    <id>https://nothinglin.top/2021/04/10/java%E6%A0%B8%E5%BF%83%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF/%E3%80%90%E7%AC%AC02%E5%A4%A9%E3%80%9130%E5%A4%A9Java%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80/</id>
    <published>2021-04-10T05:00:13.000Z</published>
    <updated>2021-04-10T16:39:52.450Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【第02天】30天Java核心编程技术基础"><a href="#【第02天】30天Java核心编程技术基础" class="headerlink" title="【第02天】30天Java核心编程技术基础"></a><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2020/12/29/20201229203912.png">【第02天】30天Java核心编程技术基础</h1><h3 id="有话想说"><a href="#有话想说" class="headerlink" title="有话想说"></a>有话想说</h3><p>待会再说······</p><h3 id="JavaEE学科课程表"><a href="#JavaEE学科课程表" class="headerlink" title="JavaEE学科课程表"></a>JavaEE学科课程表</h3><blockquote><p>下面的大纲内容是视频老师帮我们总结的。</p></blockquote><p><strong>第一阶段：JavaSE</strong></p><ul><li>Java基础</li><li>Java8新特性</li><li>数据库MySQL和SQL语言</li><li>JDBC</li></ul><p><strong>第二阶段：JavaWeb</strong></p><ul><li>HTML基础与CSS</li><li>JavaScript DOM与JQuery</li><li>XML与Tomcat</li><li>HTTP协议</li><li>服务器端组件与Servlet</li><li>JSP</li><li>EL表达式</li><li>JSTL</li><li>会话控制Cookie和Session</li><li>服务器端组件Filter</li><li>服务器端组件Listener</li><li>异步数据传输框架Ajax</li><li>文件的上传下载</li><li>可完成书城项目</li></ul><p><strong>第三阶段：JavaEE框架</strong></p><ul><li>系统整体分层解耦框架spring</li><li>轻量级Web框架SpringMVC</li><li>轻量级持久层框架mybatis</li><li>服务器操作系统Linux</li><li>内存数据库redis</li><li>项目架构、jar包管理工具Maven</li></ul><p><strong>第四阶段：JavaEE高级</strong></p><ul><li>SVN/IDEA开发工具</li><li>分布式版本管理工具Git和GitHub</li><li>MySQL高级</li><li>mycat实现MySQL的分布式、分库分表、读写分离</li><li>Nginx反向代理、负载均衡、动静分离</li><li>JVM内存模型、参数调优</li><li>JUC线程高级</li><li>分布式架构注册中心Zookeeper</li><li>虚拟化应用容器Docker</li><li>全文检索引擎ElasticSearch</li><li>消息队列RabbitMQ</li><li>前端Vue/ES6</li></ul><blockquote><p>Java基础是学习JavaEE、大数据、Android开发的基石。</p></blockquote><h3 id="Java基础图解"><a href="#Java基础图解" class="headerlink" title="Java基础图解"></a>Java基础图解</h3><p><img src="https://z3.ax1x.com/2021/04/10/cdyYCT.png" alt="java基础图解"></p><h3 id="Java基础知识体系"><a href="#Java基础知识体系" class="headerlink" title="Java基础知识体系"></a>Java基础知识体系</h3><ol><li>Java语言概述</li><li>Java基本语法</li><li>数组</li><li>面向对象编程（核心）</li><li>异常处理</li><li>枚举类&amp;注解</li><li>Java集合</li><li>泛型</li><li>IO流</li><li>多线程</li><li>Java常用类</li><li>Java反射机制</li><li>网络编程</li><li>Lambda表达式与Stream API</li><li>Java9 &amp; 10 &amp; 11新特性</li></ol><h3 id="第02天-–-知识目录"><a href="#第02天-–-知识目录" class="headerlink" title="第02天 – 知识目录"></a>第02天 – 知识目录</h3><ul><li><a href="#%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E4%BB%8B%E7%BB%8D">软件开发介绍</a></li><li><a href="#%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E4%BB%8B%E7%BB%8D">计算机编程语言介绍</a></li><li><a href="#Java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0">Java语言概述</a></li><li><a href="#Java%E8%AF%AD%E8%A8%80%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6%E5%8F%8A%E8%BF%90%E8%A1%8C%E8%BF%87%E7%A8%8B">Java运行机制及运行过程</a></li><li><a href="#Java%E8%AF%AD%E8%A8%80%E7%9A%84%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA">Java的环境变量</a></li><li><a href="#%E6%B3%A8%E9%87%8A%EF%BC%88comment%EF%BC%89">注释（comment）</a></li><li><a href="#Java%E7%9A%84API%E6%96%87%E6%A1%A3">Java的API文档</a></li></ul><h3 id="软件开发介绍"><a href="#软件开发介绍" class="headerlink" title="软件开发介绍"></a>软件开发介绍</h3><p><strong>软件开发：</strong></p><p>软件是一系列按照特定顺序组织的计算机数据和指令的集合，软件有系统软件和应用软件之分。</p><p><strong>人机交互方式：</strong></p><ul><li>图形化界面（Graphical User Interface) GUI</li><li>命令行方式（Command Line Interface) CLI</li></ul><p><strong>常用的DOS命令：</strong></p><ol><li>dir : 列出当前目录下的文件以及文件夹（directory）</li><li>md：创建目录（make directory）</li><li>rd：删除目录（remove directory）</li><li>cd：进入指定目录（come directory）</li><li>cd ..：退回上一级目录</li><li>cd /：退回根目录</li><li>del：删除文件</li><li>exit：退出dos命令行</li></ol><h3 id="计算机编程语言介绍"><a href="#计算机编程语言介绍" class="headerlink" title="计算机编程语言介绍"></a>计算机编程语言介绍</h3><p><strong>什么是计算机语言？</strong></p><p>语言是人与人之间用于沟通的一种工具。</p><p>计算机语言是人与计算机进行交流的一种工具，如果人要和计算机进行交流的话，那么我们需要学习计算机语言，毕竟我们不能要求计算机学习普通话是吧。那么有那种计算机语言呢？比如：C、C++、Java、python这些都是计算机的编程语言。</p><p><strong>计算机语言的发展：</strong></p><ul><li>机器语言</li><li>汇编语言</li><li>高级语言</li></ul><p><strong>计算机语言的使用趋势</strong></p><blockquote><p>网站：<a href="https://www.tiobe.com/tiobe-index/">https://www.tiobe.com/tiobe-index/</a></p></blockquote><p>可以在上面这个完整获取全世界编程语言的排名。</p><p><img src="https://z3.ax1x.com/2021/04/10/cdyOMQ.png" alt="语言排名"></p><p><img src="https://z3.ax1x.com/2021/04/10/cdyN2F.png"></p><p>TIOBE是一个流行编程语言排行，每个月都进行更新，排名权重基于全世界范围内工程师数量、课程数量，第三方供应商数量。对于各大搜索引擎的计算机语言的搜索次数也将成为排名权重的参考指标中去。</p><p><strong>有话想说</strong></p><p>我认真听了尚硅谷老师的讲课，有一个内容让我印象比较深刻。那就是为什么C语言发展了这么久都没有过时？像安卓开发的过程中，底层语言都还是采用C语言进行开发的，那么C语言的魅力到底在哪里？</p><blockquote><p>C语言的开发效率底，但是运行效率高。也就是说，你开发一个C语言的程序的话，可能你需要花好几个月的时间来开发一个应用程序，但是可能你使用Java语言可能就在一个多月内就完成了程序的开发。但是Java开发出来的应用程序是面向对象的，而C语言的应用程序是面向过程，自然在运行效率方面来说，C语言就比Java语言要有优势。所以，一般情况下，在面向嵌入式开发的过程中，为了能够获得一个更好的机器性能的运行，使用C语言进行这种底层开发能够很好地提高运行性能。这就是C语言和Java语言之间地区别，但是两个语言之间并没有好坏之分，各有各的优势和短处。</p></blockquote><h3 id="Java语言概述"><a href="#Java语言概述" class="headerlink" title="Java语言概述"></a>Java语言概述</h3><p>Java语言是SUN公司（Stanford University Nerwork，斯坦福大学网络公司）这样一个校办企业在1995年推出地一门高级编程语言。</p><p>Java语言是一种面向Internet的编程语言，早期的Java语言oak语言是为了嵌入式开发而存在的，只不过后来发现Java语言用于互联网开发中更具有优势。Java从一开始就富有吸引力是因为Java程序是可以在web浏览器中进行运行的。这些Java程序被称为Java小程序（applet）。applet使用现在的图形用户界面嵌入在html代码中与web用户进行交互。</p><p>随着Java技术在web方面的不断成熟，Java语言已经成为Web应用程序的首选开发语言。</p><p><strong>Java发展简史</strong></p><p><img src="https://z3.ax1x.com/2021/04/10/cdyUv4.png" alt="Java发展简史"></p><p><strong>Java语言的诞生</strong></p><p><img src="https://z3.ax1x.com/2021/04/10/cdydKJ.png"></p><p><strong>Java的主要特性</strong></p><ul><li><p>易学</p></li><li><p>面向对象</p></li><li><p>分布式</p></li><li><p>健壮</p></li><li><p>安全</p></li><li><p>多线程</p></li><li><p>跨平台</p></li></ul><p>Java语言有两个基本概念：类、对象。</p><p>三大特性：封装、继承、多态。</p><p>对于Java语言的健壮性是指Java语言吸收了C/C++语言的有点，同时去掉了一些影响程序健壮性的部分，像指针、内存的申请和释放等等这些，Java语言提供了一个相对安全的内存管理和访问机制。</p><p>对于Java的跨平台原理是指Java语言只需要在不同的操作系统平台中安装对应的Java虚拟机JVM（JVM  Java virtual Machine)即可。JVM负责在操作系统中运行Java程序。</p><p><img src="https://z3.ax1x.com/2021/04/10/cdywr9.png"></p><p><strong>Java的两种核心机制：</strong></p><ul><li>Java虚拟机（Java Virtual Machine）</li><li>垃圾收集机制（Garage Collection）</li></ul><h3 id="Java语言运行机制及运行过程"><a href="#Java语言运行机制及运行过程" class="headerlink" title="Java语言运行机制及运行过程"></a>Java语言运行机制及运行过程</h3><p><strong>核心机制 – Java虚拟机</strong></p><p>JVM是一个虚拟的计算机，具有指令集并使用不同的存储区域，负责执行指令，管理数据、内存、寄存器。对于不同的平台有对应不同的Java虚拟机，只有当某个平台提供对应版本的Java虚拟机的时候，Java程序才可以在此平台中进行运行。Java虚拟机机制屏蔽了底层运行平台的差别，实现了“一次编译，到处运行”的效果。</p><p><img src="https://z3.ax1x.com/2021/04/10/cdy0bR.png"></p><p><img src="https://z3.ax1x.com/2021/04/10/cdyDV1.png"></p><p><strong>核心机制 – 垃圾回收机制</strong></p><p>Java提供垃圾回收机制，也就是不再使用的应用程序，其内存空间将会自动被进行回收和释放对应的内存空间。在C或C++中，对应不再使用的程序，也就是被称为垃圾程序所霸占的内存空间是需要程序员手动负责回收的。</p><p>Java语言消除了程序员回收无用内存空间的责任，他提供了一种系统级线程跟踪存储空间的分配情况，并在JVM空闲时，检查并释放那些可被释放的存储空间。垃圾回收在Java程序运行过程中自动进行，Java程序员无法精确控制和干预。</p><p>但是，虽然Java程序提供了垃圾回收机制，但是Java程序还是会出现内存泄漏和内存溢出等问题的，这些问题对于一些特殊程序的运行还是会出现的。</p><h3 id="Java语言的环境搭建"><a href="#Java语言的环境搭建" class="headerlink" title="Java语言的环境搭建"></a>Java语言的环境搭建</h3><p><strong>什么是JDK和JRE？</strong></p><p>JDK是Java Development Kit 即Java开发工具包的意思，JDK是提供给Java开发人员使用的，JDK中包含了Java的开发工具，也包括JRE。所以安装了JDK就不需要再单独安装JRE了。</p><p>JDK中的开发工具有编译工具（javac.exe）和打包工具(jar.exe)</p><p>JRE是Java Runtime Environment 即Java运行环境的意思，JRE包括Java虚拟机（JVM）和Java程序所需要的核心类库等，如果你想要运行一个开发好的Java程序而不是想要开发一个Java程序的话，那么只需要再计算机中安装JRE就可以运行电脑中的Java程序了。</p><blockquote><p>简单地说，JDK就是开发Java程序地工具包，Java程序开发完成之后就交给JRE对程序进行运行。</p></blockquote><p><img src="https://z3.ax1x.com/2021/04/10/cdys56.png" alt="JDK和JRE和JVM之间地关系"></p><p><img src="https://z3.ax1x.com/2021/04/10/cdy6PK.png" alt="Java全局结构"></p><p><strong>Java开发环境地准备工作</strong></p><ul><li>明确什么是JDK、JRE</li><li>下载和安装JDK或JRE</li><li>配置环境变量path</li></ul><blockquote><p>path ： Windows系统执行命令时需要找寻地路径</p></blockquote><ul><li>使用javac和java指令验证是否成功配置环境变量</li><li>选择合适地文本编辑器或IDE进行Java程序地开发</li></ul><p><strong>path环境变量说明</strong></p><p><img src="https://z3.ax1x.com/2021/04/10/cdyc8O.png" alt="paht环境变量"></p><p>今天我看了视频老师地讲解之后才恍然大悟，我之前一直内心有点纳闷一件事情，那就是我把JDK地bin目录路劲直接写在<code>paht环境变量</code>中就能够全局使用<code>java</code>和<code>javac</code>指令了，为什么之前在学校上Java课地时候，老师还要我们在环境变量中创建一个新地变量<code>JAVA_HOME</code>，在这个变量中添加JDK地目录路劲，然后再到path路劲中添加<code>%JAVA_HOME/bin%</code>，这一个步骤是不是多余的？</p><p>我也是纳闷了很久，一直以为是程序员的编程规范，但是今天仔细听了视频老师的讲解，说设置<code>JAVA_HOME</code>变量和<code>%JAVA_HOME%</code>这一个是一个动态路劲设置的过程，后面如果遇到tomcat服务器需要找JDK中的其他路径的时候难道又要直接写一个死路劲吗？</p><p>万一我重新安装JDK之后，JDK的路径改变之后，难道我又要回去path变量中找到tomcat需要的路径和找到JDK编译需要的路径，然后再一个一个改吗？我为什么不设置一个动态的路径%JAVA_HOME%，然后在JAVA_HOME这个变量中改一下对应JDK的路径，其他的比如使用<code>%JAVA_HOME/bin%</code>和<code>%JAVA_HOME/其他%</code>对应的路径不就动态变化了吗？</p><p>JAVA_HOME这个格式是规定的，因为其他的应用程序需要用到JDK的时候，都是内定JAVA_HOME这个格式动态设置好了的，到时候找JDK相关文件的时候就是<code>%JAVA_HOME/···%</code>这样去找的。</p><p><img src="https://z3.ax1x.com/2021/04/10/cdyg2D.png"></p><p><strong>第一个Java程序运作过程</strong></p><ul><li>将Java代码编写到扩展名为.java的文件中</li><li>通过Javac命令对Java文件进行编译</li><li>通过Java命令对生成的class文件进行运行</li></ul><p><img src="https://z3.ax1x.com/2021/04/10/cdy2xe.png"></p><h3 id="注释-comment"><a href="#注释-comment" class="headerlink" title="注释(comment)"></a>注释(comment)</h3><p>用于注解说明，解释程序的文字就是注释。</p><p><strong>Java中的注释类型：</strong></p><ul><li>单行注释</li><li>多行注释</li><li>文档注释</li></ul><p>说到注释的好处，其实不用多想的，就像我们买一个电器就需要一个使用说明书来说明怎么使用。注释的作用就是帮助我们理解代码的含义与作用。</p><p><strong>HelloJava程序</strong></p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">HelloJava</span><span class="token punctuation">&#123;</span><span class="token comment">//单行注释：如下的main方法是程序的入口，main地格式是固定的</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//单行注释：如下的语句表示输出到控制台</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>单行注释和多行注释注释掉的内容是不参与编译的，也就是编译的过程中自动忽略掉注释内容，在生成的.class的字节码文件中不含行注释掉的内容信息。</p><blockquote><p>注意多行注释不能够进行嵌套使用！！！</p></blockquote><p><strong>谈谈我对System.out的新认识</strong></p><p>一直以来，我都以为System方法是承接结果的输出，就像电脑的计算器应用程序，我一直认为计算出来的结果显示是使用System.out的方式来对结果输出的，但是后来我慢慢弄明白console的意思之后，也慢慢明白什么是日志文件和日志文件的重要性之后，我才明白system方法更多地是使用在控制台信息输出或者日志文件地记录当中。</p><p><strong>对HelloJava程序进行一个小结</strong></p><ul><li>Java程序的落地经历：编写-编译-运行，这三个过程</li></ul><blockquote><p>编写：我们将编写的Java代码保存在以.java结尾的源文件中</p><p>编译：使用javac.exe命令编译我们的Java源文件。<code>$ javac HelloJava.java</code></p><p>运行：使用java.exe命令来解释运行我们的字节码文件。 <code>$ java HelloJava</code></p></blockquote><ul><li>在一个Java源文件中可以声明多个class。但是，只能最多有一个类声明为public，而且要求声明为public的类的类名必须要和源文件的文件名相同。</li></ul><p><img src="https://z3.ax1x.com/2021/04/10/cdyWKH.png" alt="思考"></p><ul><li>程序的入口是main（）方法，并且这个main（）方法的格式是固定的。</li><li>每一行执行语句都以英文的分号<code>；</code>作结尾进行结束语句。</li><li>在编译的过程中，编译完成后会生成一个或多个字节码文件，这个字节码文件的文件名和java源文件中的类名是相同的。</li></ul><p><strong>Java的文档注释</strong></p><p>今天最让我兴奋的一点就是我发现Java文档注释的使用方法，真的挺神奇的。</p><p>Java文档注释是Java特有的一种注释，它的格式如下：</p><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** @author 指定Java程序的作者 @version 指定源文件的版本 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>注释内容可以被JDK提供的<code>javadoc</code>所解析，生成一套以网页文件形式体验的该程序的说明文档。</p><div class="code-wrapper"><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">$ javadoc -d mydoc -author -version HelloWorld.java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><img src="https://z3.ax1x.com/2021/04/10/cdyhqA.png" alt="HelloJava的程序说明文档"></p><p><strong>关于注释的幽默笑话，我看了三遍才笑了</strong></p><p><img src="https://z3.ax1x.com/2021/04/10/cdyIat.png"></p><h3 id="Java的API文档"><a href="#Java的API文档" class="headerlink" title="Java的API文档"></a>Java的API文档</h3><p>API（Application Programming Interface，应用程序编写接口）是Java提供的基本编程接口。</p><p>Java语言提供了大量的基础类，因此Oracle也为这些基础类提供了相应的API文档，这些文档用来告诉开发者如何使用这些类，以及这些类里包含的方法。</p><p>我使用的API文档是Zeal文档离线阅读器中进行下载阅读，不过对于我来说比较难的是这里下载的文档是全英文的，不过放到浏览器中阅读并且用谷歌翻译还算凑合吧，其实也有一些中文的API文档，只不过Zeal这个离线文档阅读器中不单只有java的API文档，还有非常多的API文档可以去下载的。</p><p><img src="https://z3.ax1x.com/2021/04/10/cdy7Pf.png" alt="zeal"></p><p><img src="https://z3.ax1x.com/2021/04/10/cdybRS.png" alt="zeal"></p><h3 id="课件源文件"><a href="#课件源文件" class="headerlink" title="课件源文件"></a>课件源文件</h3><p><strong>JDK8的安装与配置</strong></p>    <div class="row">        <embed src="https://nothinglin-space.my-free.workers.dev/0:/30%E5%A4%A9Java%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/day02/%E5%B0%9A%E7%A1%85%E8%B0%B7_%E5%AE%8B%E7%BA%A2%E5%BA%B7_JDK8%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE.pdf" width="100%" height="700" type="application/pdf">    </div>    <p><strong>第02天课程源课件</strong></p><p>本篇博客都是基于这篇课件的，如果大家觉得有什么地方觉得不对劲，欢迎大家参考源课件，毕竟我在写博客的时候可能会有地方疏漏，所以希望大家带批判性思维来阅读我的博客笔记Java系列的笔记。</p>    <div class="row">        <embed src="https://nothinglin-space.my-free.workers.dev/0:/30%E5%A4%A9Java%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/day02/%E5%B0%9A%E7%A1%85%E8%B0%B7_%E5%AE%8B%E7%BA%A2%E5%BA%B7_%E7%AC%AC1%E7%AB%A0_Java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0.pdf" width="100%" height="700" type="application/pdf">    </div>    <p><strong>第02天课程的面试题与练习题</strong></p>    <div class="row">        <embed src="https://nothinglin-space.my-free.workers.dev/0:/30%E5%A4%A9Java%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/day02/%E5%B0%9A%E7%A1%85%E8%B0%B7_%E5%AE%8B%E7%BA%A2%E5%BA%B7_%E7%AC%AC1%E7%AB%A0%E8%8A%82%E7%BB%83%E4%B9%A0_Java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0.pdf" width="100%" height="700" type="application/pdf">    </div>    <p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2020/12/31/20201231121340.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;【第02天】30天Java核心编程技术基础&quot;&gt;&lt;a href=&quot;#【第02天】30天Java核心编程技术基础&quot; class=&quot;headerlink&quot; title=&quot;【第02天】30天Java核心编程技术基础&quot;&gt;&lt;/a&gt;&lt;img src=&quot;https://nothi</summary>
      
    
    
    
    <category term="30天Java核心编程技术基础" scheme="https://nothinglin.top/categories/30%E5%A4%A9Java%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="Java" scheme="https://nothinglin.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>【第01天】30天Java核心编程技术基础</title>
    <link href="https://nothinglin.top/2021/04/09/java%E6%A0%B8%E5%BF%83%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF/%E3%80%90%E7%AC%AC01%E5%A4%A9%E3%80%9130%E5%A4%A9Java%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80/"/>
    <id>https://nothinglin.top/2021/04/09/java%E6%A0%B8%E5%BF%83%E5%9F%BA%E7%A1%80%E6%8A%80%E6%9C%AF/%E3%80%90%E7%AC%AC01%E5%A4%A9%E3%80%9130%E5%A4%A9Java%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80/</id>
    <published>2021-04-09T07:04:27.000Z</published>
    <updated>2021-04-10T16:39:58.931Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【第01天】30天Java核心编程技术基础"><a href="#【第01天】30天Java核心编程技术基础" class="headerlink" title="【第01天】30天Java核心编程技术基础"></a><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2020/12/29/20201229203912.png">【第01天】30天Java核心编程技术基础</h1><h3 id="有话说"><a href="#有话说" class="headerlink" title="有话说"></a>有话说</h3><p>前些天想要认真研究一个仿微信的系统源码，结果发现看不懂。视频分析说这个聊天系统是采用springboot和netty框架进行搭建的，因为觉得netty没听说过有点好奇，于是就去搜索相关netty入门视频，结果发现这个框架对编程零基础的人非常不友好，我的Java编程技术也是半桶水这样子，看了那些教程头快大起来了。如果还是硬着头皮死磕netty的话，估计会陷入假学习的状态而浪费大部分时间，后来看了尚硅谷的netty系列开源视频教程，直接被老师劝退。开篇提前说明，netty这门课不建议零基础学员参与学习，必须具备下面这些基本知识：</p><ul><li>Java OOP编程</li><li>Java多线程编程</li><li>JavaIO编程</li><li>Java网络编程</li><li>Java常用设计模式</li><li>Java常用数据结构</li></ul><p>看到这些，我直接先把这个netty系列视频先收藏，暂时放下来，所以找到30天Java核心编程技术基础这门课程，也是尚硅谷的开源视频。我以前就是没什么耐心视频经常都是跳着看，也不成系统，学校上课也不听，想着回去B站搜视频，结果B站视频也是随便看看，不亲自去做笔记和敲代码，最终导致我这样半桶水。</p><p>因为现在都已经大二下了，转眼大三了，还这样半桶水的话，估计像我一个朋友说的那样：</p><blockquote><p>到时候实习，给领导捶捶背，倒倒茶，跑跑腿。再几年后，认真学习的同学当了自己的领导之后再回头感慨自己的大学都是在虚度光阴。</p></blockquote><p>所以，我还是从娃娃抓起吧，注重知识系统的构建才行。博客我也创建一年多了，零零碎碎也就那么几篇文章，我觉得拿来当自己的知识系统是再好不过的选择。</p><p>在这里我先提前说明一下我的笔记相关的事情，避免各位不小心看到我博客的大佬吐槽我。我这些系列笔记很多都是看视频，摘抄重点，有些可能完全是视频中的内容，有些为了能更好理解，我会将其用自己的理解写下来。所以，想一些笔记系列的文章，大家不要看了就随便说：</p><blockquote><p>哇塞，大佬你好牛啊！</p></blockquote><p>系列笔记知识都是在前人的基础上总结下来的知识，所以对于一些是我自己写的文章我就自己加上原创标签的，对于一些没有原创标签的文章，就是我的知识总结来的，不一定是来自某位大佬的单独文章，可能是综合型的知识总结笔记。所以大家不要一上来就留言说，大佬你好腻害啊。嘻嘻，不敢当不敢当。大家相互参考和相互学习。</p><h3 id="第01天——知识大纲"><a href="#第01天——知识大纲" class="headerlink" title="第01天——知识大纲"></a>第01天——知识大纲</h3><ul><li><a href="#%E6%A6%82%E8%BF%B0">概述</a></li><li><a href="#%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%E4%BB%8B%E7%BB%8D">计算机硬件介绍</a></li><li><a href="#%E4%B8%87%E7%BB%B4%E7%BD%91">万维网</a></li><li><a href="#%E8%81%8C%E4%B8%9A%E5%8F%91%E5%B1%95%E4%B8%8E%E6%8F%90%E5%8D%87">职业发展与提升</a></li></ul><p>这些大纲是我学习的视频课程第一天的大纲内容。</p><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>计算机包括硬件(hardware)和软件(software)两个部分。硬件包括计算机中可以看得见的物理部分，而软件是提供看不见的指令，这些指令可以控制硬件并且可以使得硬件完成特定的任务。</p><p><strong>程序设计</strong></p><p>程序设计是指创建或开发软件的一个过程。软件包含指令，告诉计算机做什么。软件遍布我们的周围，出了个人计算机还有汽车、手机甚至是烤面包机都可能运行着软件。</p><p><strong>如何选择学习哪种程序设计语言？</strong></p><p>程序设计语言有非常多种，每种语言都是为了实现某个特定的目的而发明的，事实上没有最好的语言，每种语言都有它的长处和短处。</p><p>经验丰富的程序员知道各种语言擅长的应用场景，因此对于大牛们都会尽可能地掌握各种不同地程序设计语言。如果你掌握了一种编程语言，应该会很容易上手其他地编程语言。</p><p>关键是学习如何使用程序设计方法来解决问题，这也是学习编程地最终目的。</p><h3 id="计算机硬件介绍"><a href="#计算机硬件介绍" class="headerlink" title="计算机硬件介绍"></a>计算机硬件介绍</h3><p><img src="https://z3.ax1x.com/2021/04/09/cNTz2q.png" alt="来源视频教程"></p><p><img src="https://z3.ax1x.com/2021/04/09/cN7eR1.png" alt="来源视频教程"></p><p>冯诺依曼体系结构是现代计算机的基础，现在大多数的计算机都还是冯诺依曼计算机地组织结构，只是作了一些改进而已，并没有从根本上突破冯诺依曼体系结构地束缚，冯诺依曼也因为被称为“计算机之父”。</p><p><strong>中央处理器</strong></p><p>Central Processing Unit(CPU)中央处理器是计算机的大脑，它从内存中获取指令，然后执行这些指令。它的组织结构包含control unit控制单元和arithmetic/logic unit算术/逻辑单元。</p><ul><li><strong>控制单元</strong>：用于控制和协调其他的动作</li><li><strong>算数/逻辑单元</strong>：用于完成数值运算（+、-、*、/）和逻辑运算。</li></ul><p>每台计算机都有一个内部时钟，这个时钟以固定速度发射电子脉冲，时钟速度越快，在给定的时间段内执行的指令就越多。速度的计量单位是赫兹(HZ)，1Hz相当于每秒1个脉冲。随着CPU速度的不断提高，目前以千兆赫兹（GHz）来表述。</p><blockquote><p>1khz = 1024hz</p><p>1mhz = 1024khz</p><p>1Ghz = 1024mhz</p></blockquote><p>最开始的CPU只有一个core核，核是处理器中实现指令读取和执行的部分，一个多核CPU是一个具有两个或者更多个独立核的组件，这样可以提高CPU的处理能力。</p><p>现在的CPU都是构建在一块小小的硅半导体芯片上，这块芯片包含数百万称为晶体管的小电路开关上，用来处理信息。</p><p><strong>IT 定律之计算机行业发展规律</strong></p><ul><li>摩尔定律</li><li>安迪-比尔定律</li><li>反摩尔定律</li></ul><p><strong>存储设备</strong></p><p><img src="https://z3.ax1x.com/2021/04/09/cN7uM6.png" alt="image-20210409161013254"></p><p>内存（也叫Random-Access Memory，RAM）：由一个有序的字节序列组成，用来存储程序及程序需要的数据。一个程序和它的数据在被CPU执行前必须移到计算机的内存中去。</p><p>内存和CPU一样也是构建在表面前有数百万晶体管的硅半导体芯片上，但是内存芯片更简单、更低俗、更便宜。</p><p>内存存取数据的速度比硬盘的存取速度快10倍，在某些环境里，硬盘和内存之间的速度差距可能会更大。而CPU的速度比内存不知快多少倍，相当于我们把程序从硬盘放到内存后，CPU就直接在内存中运行程序了，这样比CPU直接在硬盘中运行程序要快很多。</p><blockquote><p>就像一个大胃王（CPU）可以吃东西很快，但是没想到的是，他不是在自助餐中（内存）吃东西，而是一个厨师（硬盘）慢慢给他炒东西。你说他吃东西的速度能多快？在自助餐直接就开吃，不用等上菜之类的特殊情况。</p></blockquote><p>内存解决了一部分CPU运行过快而硬盘数据存取太慢的问题，这样一来提高了我们的电脑的运行速度，内存就像一个高速车道一般，数据由传输速度较慢的硬盘通过这条高速车道传送至CPU中处理。</p><p>但是内存是带点存储的，一旦断电之后数据就会消失，而且容量有限，所以要长时间存储程序或数据就需要使用硬盘来进行存储。</p><p>内存的两个作用：</p><ul><li>保存从硬盘读取的数据，提供给CPU使用。</li><li>保存CPU的一些临时执行结果，以便CPU下次使用或者保存到硬盘中。</li></ul><h3 id="万维网"><a href="#万维网" class="headerlink" title="万维网"></a>万维网</h3><p>World Wide Web，www，环球信息网）万维网常简称为Web，万维网被分为Web客户端和Web服务器程序，WWW可以让Web客户端（浏览器）来访问浏览Web服务器上的页面。万维网是一个由许多互相链接的超文本组成，通过互联网访问的系统。在这个系统中，每个有用的事物会被称为资源，并且由一个全局统一资源便师傅（URI）标识，这些资源通过超文本传输协议HTTP传送给用户，HTTP是通过点击链接来获得资源的。</p><h3 id="职业发展与提升"><a href="#职业发展与提升" class="headerlink" title="职业发展与提升"></a>职业发展与提升</h3><p><img src="https://z3.ax1x.com/2021/04/09/cN7lZD.png"></p><p><img src="https://z3.ax1x.com/2021/04/09/cN71de.png"></p><p><img src="https://z3.ax1x.com/2021/04/09/cN73IH.png"></p><p><img src="https://z3.ax1x.com/2021/04/09/cN7Gid.png"></p><h3 id="第01天——完···"><a href="#第01天——完···" class="headerlink" title="第01天——完···"></a>第01天——完···</h3><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2020/12/31/20201231121340.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;【第01天】30天Java核心编程技术基础&quot;&gt;&lt;a href=&quot;#【第01天】30天Java核心编程技术基础&quot; class=&quot;headerlink&quot; title=&quot;【第01天】30天Java核心编程技术基础&quot;&gt;&lt;/a&gt;&lt;img src=&quot;https://nothi</summary>
      
    
    
    
    <category term="30天Java核心编程技术基础" scheme="https://nothinglin.top/categories/30%E5%A4%A9Java%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="Java" scheme="https://nothinglin.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>【高等数学】高等数学预备基础知识</title>
    <link href="https://nothinglin.top/2021/03/29/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E3%80%90%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E3%80%91%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E9%A2%84%E5%A4%87%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>https://nothinglin.top/2021/03/29/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E3%80%90%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E3%80%91%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E9%A2%84%E5%A4%87%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</id>
    <published>2021-03-28T17:32:03.000Z</published>
    <updated>2021-04-10T16:48:30.083Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【高等数学】高等数学预备基础知识"><a href="#【高等数学】高等数学预备基础知识" class="headerlink" title="【高等数学】高等数学预备基础知识"></a><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2020/12/29/20201229203912.png">【高等数学】高等数学预备基础知识</h1><h3 id="原文课件："><a href="#原文课件：" class="headerlink" title="原文课件："></a>原文课件：</h3>    <div class="row">        <embed src="https://nothinglin-space.my-free.workers.dev/2:/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/1%E3%80%81%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E9%A2%84%E5%A4%87%E7%9F%A5%E8%AF%86.pdf" width="100%" height="700" type="application/pdf">    </div>    <p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2020/12/31/20201231121340.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;【高等数学】高等数学预备基础知识&quot;&gt;&lt;a href=&quot;#【高等数学】高等数学预备基础知识&quot; class=&quot;headerlink&quot; title=&quot;【高等数学】高等数学预备基础知识&quot;&gt;&lt;/a&gt;&lt;img src=&quot;https://nothinglin.coding.ne</summary>
      
    
    
    
    <category term="高等数学" scheme="https://nothinglin.top/categories/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
    
    <category term="高等数学" scheme="https://nothinglin.top/tags/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>【Github系列】创建github账号</title>
    <link href="https://nothinglin.top/2021/03/28/Github%E7%B3%BB%E5%88%97/%E3%80%90Github%E7%B3%BB%E5%88%97%E3%80%91%E5%88%9B%E5%BB%BAgithub%E8%B4%A6%E5%8F%B7/"/>
    <id>https://nothinglin.top/2021/03/28/Github%E7%B3%BB%E5%88%97/%E3%80%90Github%E7%B3%BB%E5%88%97%E3%80%91%E5%88%9B%E5%BB%BAgithub%E8%B4%A6%E5%8F%B7/</id>
    <published>2021-03-28T05:07:00.000Z</published>
    <updated>2021-03-28T05:39:52.483Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【Github系列】创建github账号"><a href="#【Github系列】创建github账号" class="headerlink" title="【Github系列】创建github账号"></a><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2020/12/29/20201229203912.png">【Github系列】创建github账号</h1><blockquote><p>此教程在windows操作系统平台下进行操作，但是在进行github官网的访问过程中需要一些准备工作。</p></blockquote><h3 id="配置HOSTS文件"><a href="#配置HOSTS文件" class="headerlink" title="配置HOSTS文件"></a>配置HOSTS文件</h3><p>在创建GitHub的过程中，可能有些电脑并不能直接访问github官网的 - - 需要借助一些方法来解决这个问题。对于没有科学上网环境的电脑配置来说，最好的方法那就是修改HOSTS文件来实现github官网的访问。</p><blockquote><p>网站推荐：<a href="https://github.com/521xueweihan/GitHub520">https://github.com/521xueweihan/GitHub520</a>  ，<a href="https://cdn.fobzs.com/-----https://github.com/521xueweihan/GitHub520">备用链接（推荐chrome）</a></p></blockquote><h5 id="寻找HOSTS文件"><a href="#寻找HOSTS文件" class="headerlink" title="寻找HOSTS文件"></a>寻找HOSTS文件</h5><p>HOSTS文件在Windows操作系统下的默认路径一般是<code>C:\Windows\System32\drivers\etc</code>。</p><p><img src="https://z3.ax1x.com/2021/03/26/6X4Dcd.png"></p><p>使用记事本的方式进行打开，并且向其中添加下面的内容，在我写这个教程的时候我这边还是有效的，如果大家添加了这段内容仍然不能正常访问GitHub官网的话，可以点击我上面给的链接地址，有一个GitHub520的项目持续更新新的且有效的内容，大家可以去获取最新的内容添加到HOSTS文件即可。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># GitHub520 Host Start</span><span class="token number">185.199</span>.108.154               github.githubassets.com<span class="token number">140.82</span>.113.22                 central.github.com<span class="token number">185.199</span>.108.133               desktop.githubusercontent.com<span class="token number">185.199</span>.108.153               assets-cdn.github.com<span class="token number">185.199</span>.108.133               camo.githubusercontent.com<span class="token number">185.199</span>.108.133               github.map.fastly.net<span class="token number">199.232</span>.69.194                github.global.ssl.fastly.net<span class="token number">140.82</span>.112.4                  gist.github.com<span class="token number">185.199</span>.108.153               github.io<span class="token number">140.82</span>.112.3                  github.com<span class="token number">140.82</span>.113.6                  api.github.com<span class="token number">185.199</span>.108.133               raw.githubusercontent.com<span class="token number">185.199</span>.108.133               user-images.githubusercontent.com<span class="token number">185.199</span>.108.133               favicons.githubusercontent.com<span class="token number">185.199</span>.108.133               avatars5.githubusercontent.com<span class="token number">185.199</span>.108.133               avatars4.githubusercontent.com<span class="token number">185.199</span>.108.133               avatars3.githubusercontent.com<span class="token number">185.199</span>.108.133               avatars2.githubusercontent.com<span class="token number">185.199</span>.108.133               avatars1.githubusercontent.com<span class="token number">185.199</span>.108.133               avatars0.githubusercontent.com<span class="token number">185.199</span>.108.133               avatars.githubusercontent.com<span class="token number">140.82</span>.114.10                 codeload.github.com<span class="token number">52.217</span>.1.132                  github-cloud.s3.amazonaws.com<span class="token number">52.216</span>.179.211                github-com.s3.amazonaws.com<span class="token number">52.216</span>.99.43                  github-production-release-asset-2e65be.s3.amazonaws.com<span class="token number">52.217</span>.110.220                github-production-user-asset-6210df.s3.amazonaws.com<span class="token number">52.216</span>.107.44                 github-production-repository-file-5c1aeb.s3.amazonaws.com<span class="token number">185.199</span>.108.153               githubstatus.com<span class="token number">64.71</span>.168.201                 github.community<span class="token number">185.199</span>.108.133               media.githubusercontent.com<span class="token comment"># Update time: 2021-03-25T22:05:26+08:00</span><span class="token comment"># Star me GitHub url: https://github.com/521xueweihan/GitHub520</span><span class="token comment"># GitHub520 Host End</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://z3.ax1x.com/2021/03/26/6X4ynI.png"></p><p>我们在修改HOSTS文件的过程中可能会遇到一些权限问题，保存修改的时候HOSTS文件是需要你进行另外保存的情况。这种情况建议你在修改之前进行HOSTS文件的备份，如下图所示。</p><p><img src="https://z3.ax1x.com/2021/03/26/6X46Bt.png"></p><p>我们先为HOSTS文件添加一个后缀<code>.bak</code>。然后再复制新的HOSTS文件进行修改，注意，这里的HOSTS.bak是原HOSTS文件。</p><h3 id="注册GitHub账号"><a href="#注册GitHub账号" class="headerlink" title="注册GitHub账号"></a>注册GitHub账号</h3><blockquote><p>GitHub官网：<a href="https://github.com/">https://github.com/</a></p></blockquote><p><img src="https://z3.ax1x.com/2021/03/26/6X42Af.png"></p><p>我们点击<code>Sign up</code>进行注册账号。</p><p><img src="https://z3.ax1x.com/2021/03/26/6X4RN8.png"></p><p>下一步我们需要到邮箱中确认邮箱地址（邮箱内容）。</p><p><img src="https://z3.ax1x.com/2021/03/26/6X4W4S.png"></p><p>完成之后我们将再次收到一封邮箱告知我们已经成功注册了GitHub账号（邮箱内容）。</p><p><img src="https://z3.ax1x.com/2021/03/26/6X45cj.png"></p><p>目前我们先暂时跳过下面的三个选项。</p><p><img src="https://z3.ax1x.com/2021/03/26/6X4Ijs.png"></p><p>我们先浏览我们的个人主页，也就是我们最经典的页面。</p><p><img src="https://z3.ax1x.com/2021/03/26/6X4HH0.png"></p><p>目前来说我们就已经完成了Github账号的注册了，接下来就需要我们对Github进行实用性操作了。</p><p>目前来说我也还是在学习阶段，我也还是Github小白，所以文中存在错误或其它问题，还希望大家多多指正，此教程分享给自己跟和我一样的小白进行学习参考。</p><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2020/12/31/20201231121340.png" alt="image-20201231121338270"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;【Github系列】创建github账号&quot;&gt;&lt;a href=&quot;#【Github系列】创建github账号&quot; class=&quot;headerlink&quot; title=&quot;【Github系列】创建github账号&quot;&gt;&lt;/a&gt;&lt;img src=&quot;https://nothingl</summary>
      
    
    
    
    <category term="Github系列" scheme="https://nothinglin.top/categories/Github%E7%B3%BB%E5%88%97/"/>
    
    
    <category term="Github系列" scheme="https://nothinglin.top/tags/Github%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>【系统操作】解决C盘扩容问题</title>
    <link href="https://nothinglin.top/2021/03/28/%E7%B3%BB%E7%BB%9F%E6%93%8D%E4%BD%9C/%E3%80%90%E7%B3%BB%E7%BB%9F%E6%93%8D%E4%BD%9C%E3%80%91%E8%A7%A3%E5%86%B3C%E7%9B%98%E6%89%A9%E5%AE%B9%E9%97%AE%E9%A2%98/"/>
    <id>https://nothinglin.top/2021/03/28/%E7%B3%BB%E7%BB%9F%E6%93%8D%E4%BD%9C/%E3%80%90%E7%B3%BB%E7%BB%9F%E6%93%8D%E4%BD%9C%E3%80%91%E8%A7%A3%E5%86%B3C%E7%9B%98%E6%89%A9%E5%AE%B9%E9%97%AE%E9%A2%98/</id>
    <published>2021-03-28T04:57:38.000Z</published>
    <updated>2021-03-28T05:39:15.416Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【系统操作】解决C盘扩容问题"><a href="#【系统操作】解决C盘扩容问题" class="headerlink" title="【系统操作】解决C盘扩容问题"></a><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2020/12/29/20201229203912.png">【系统操作】解决C盘扩容问题</h1><h3 id="强迫症患者的煎熬："><a href="#强迫症患者的煎熬：" class="headerlink" title="强迫症患者的煎熬："></a>强迫症患者的煎熬：</h3><p>对于我来说，C盘的剩余空间容量的大小会决定我对新软件安装的态度。C盘空间太小的话 - - 我是不会再去下载新的软件的，除非我有多余的软件可以给我来卸载。根据我的观察，不管我有没有安装新的软件，C盘的空间总是一直在减少，我不知为什么会越来越抓狂。上网搜索了解了之后发现，系统会定期更新系统，系统更新文件就会偷偷存放在C盘中，所以不借助一些垃圾清理工具都找不到这些文件。还有软件和浏览器的使用缓存也是导致C盘空间容量减少的主要原因。其实这还好吧，我基本上每天的定期清理垃圾的，只不过每一次新学期就又要多学几门编程语言，很奇怪有些开发工具要下载很多乱七八糟的配件之类的，而且还多而大，最后慢慢消耗掉我仅存的C盘空间。</p><h3 id="如何解决C盘扩容问题？"><a href="#如何解决C盘扩容问题？" class="headerlink" title="如何解决C盘扩容问题？"></a>如何解决C盘扩容问题？</h3><p>后来忍不下去之后就开始在网上收集有用的C盘扩容方法，最后成功的我将在下面进行介绍。不过前提条件是：装载你的C盘的硬盘容量要足够大。</p><p><img src="https://z3.ax1x.com/2021/03/28/cSdaHe.png"></p><p><img src="https://z3.ax1x.com/2021/03/28/cSdwAH.png"></p><blockquote><p>注意：C盘空间和D盘空间是要在同一个硬盘中才行。</p></blockquote><p><img src="https://z3.ax1x.com/2021/03/28/cSd0Nd.png"></p><h3 id="如何查看我的C盘慢不慢足扩容要求？"><a href="#如何查看我的C盘慢不慢足扩容要求？" class="headerlink" title="如何查看我的C盘慢不慢足扩容要求？"></a>如何查看我的C盘慢不慢足扩容要求？</h3><p>首先我们需要右击我的电脑，选择管理选项</p><p><img src="https://z3.ax1x.com/2021/03/28/cSdB4A.png"></p><p>因为我的C盘和D盘同属于同一个硬盘（磁盘0），所以我的策略是在D盘中分一些空间给C盘，从而达到C盘扩容的目的。</p><blockquote><p>注意：磁盘1中的空间是不能够分配到C盘进行扩容的，因为他们并不是在同一块硬盘中，物理不相通，逻辑关系更没有关系。</p></blockquote><h3 id="软件工具"><a href="#软件工具" class="headerlink" title="软件工具"></a>软件工具</h3><p>软件工具的话，我选择的是<strong>DiskGenius</strong>来进行分区大小的调整。我们首先选择D盘右键，再点击调整分区大小，我们从D盘空闲出20G的空间先。</p><p><img src="https://z3.ax1x.com/2021/03/28/cSdr9I.png"></p><p><img src="https://z3.ax1x.com/2021/03/28/cSds3t.png"></p><p>然后点击开始，等待几分钟。可能你重启之后会进入一个磁盘调试系统中，你可以选择推出或者是在该系统里面打开DiskGenius软件，点击你分配出来的灰色部分的空间，右键选择空间分配给C盘，然后再耐心等待一下并且等待完成之后重新启动电脑就完成了C盘的扩容。</p><p>PS：因为进入调试系统中没办法截屏，所以当时的图片没有备份下来，所有后面分配空间给C盘的部分图片没办法提供出来。不过我参考网上的截图，给大家提供参考，分配空闲空间的截图如下，完成下面部分重启电脑之后就完成了C盘扩容了。</p><p><img src="https://z3.ax1x.com/2021/03/28/cSdygP.png"></p><p>总体来说，实现C盘扩容需要你的空闲空间和你的C盘是同属于一个硬盘下才能进行空间的逻辑调整。大家注意理解一下就好了，因为我的基本功也不是很扎实，所以在这里献丑了。</p><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2020/12/31/20201231121340.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;【系统操作】解决C盘扩容问题&quot;&gt;&lt;a href=&quot;#【系统操作】解决C盘扩容问题&quot; class=&quot;headerlink&quot; title=&quot;【系统操作】解决C盘扩容问题&quot;&gt;&lt;/a&gt;&lt;img src=&quot;https://nothinglin.coding.net/p/pi</summary>
      
    
    
    
    <category term="系统操作" scheme="https://nothinglin.top/categories/%E7%B3%BB%E7%BB%9F%E6%93%8D%E4%BD%9C/"/>
    
    
    <category term="系统操作" scheme="https://nothinglin.top/tags/%E7%B3%BB%E7%BB%9F%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://nothinglin.top/2016/06/01/hello-world/"/>
    <id>https://nothinglin.top/2016/06/01/hello-world/</id>
    <published>2016-06-01T15:47:44.000Z</published>
    <updated>2021-03-26T08:02:18.643Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="code-wrapper"><pre class="line-numbers language-java" data-language="java"><code class="language-java">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><blockquote><p>嘿嘿，哈哈哈</p></blockquote><p><strong>这是测试粗体字</strong></p>    <div class="row">        <embed src="https://nothinglin-space.my-free.workers.dev/0:/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%EF%BC%9A%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8%E5%8F%8A%E6%A1%88%E4%BE%8B%E8%AF%A6%E8%A7%A3%20(readOnly)%20by%20%E6%9D%8E%E9%AA%8F%20%20%E8%BE%B9%E6%80%9D%20(z-lib.org).pdf" width="100%" height="700" type="application/pdf">    </div>    ]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
