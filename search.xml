<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>IDEA新建时没有java class选项</title>
      <link href="2021/11/13/IDEA%E6%96%B0%E5%BB%BA%E6%97%B6%E6%B2%A1%E6%9C%89java-class%E9%80%89%E9%A1%B9/"/>
      <url>2021/11/13/IDEA%E6%96%B0%E5%BB%BA%E6%97%B6%E6%B2%A1%E6%9C%89java-class%E9%80%89%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="IDEA新建时没有java-class选项"><a href="#IDEA新建时没有java-class选项" class="headerlink" title="IDEA新建时没有java class选项"></a>IDEA新建时没有java class选项</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>很奇怪，我在使用idea创建了一个普通的Java项目的时候我发现，在我想要新建一个java文件的时候，我右键新建发现没有Java class选项，这就让我很郁闷了。我建出来的文件格式是kotlin，虽然我要改后缀为java，但是平时创建Java类的时候就会自动把类名方法给写出来了，没了这个我就需要增加工作量了在使用idea的时候，所以在使用idea的时候这个问题是需要解决的。</p><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/9/20210909001754.png" alt="image-20210909001228458"></p><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/9/20210909001801.png" alt="image-20210909001308068"></p><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/9/20210909001806.png" alt="image-20210909001355170"></p><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/9/20210909001811.png" alt="image-20210909001557173"></p><h2 id="最后处理结果"><a href="#最后处理结果" class="headerlink" title="最后处理结果"></a>最后处理结果</h2><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/9/20210909001818.png" alt="image-20210909001643833"></p>]]></content>
      
      
      <categories>
          
          <category> IDEA开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA使用问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用idea配置GitHub远程仓库</title>
      <link href="2021/11/13/Git/%E4%BD%BF%E7%94%A8idea%E9%85%8D%E7%BD%AEGitHub%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/"/>
      <url>2021/11/13/Git/%E4%BD%BF%E7%94%A8idea%E9%85%8D%E7%BD%AEGitHub%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="使用idea配置GitHub远程仓库"><a href="#使用idea配置GitHub远程仓库" class="headerlink" title="使用idea配置GitHub远程仓库"></a>使用idea配置GitHub远程仓库</h1><p>前言：本教程是参考csdn博主的教程进行编写的，编写理由为：</p><ul><li>整理成为适合自己的笔记教程</li><li>害怕博主删除博文之后就没有参考教程了，可说是一种备份吧</li></ul><p>你什么时候会希望使用idea配置git和GitHub进行代码版本管理？前提条件是我们已经有了一个项目等待进行管理，所以我们先要有一个现存的项目。当然我们也要先把git的基本环境配置给准备好先。</p><p>（创建项目的过程和git的环境变量配置过程我就不写了····）</p><h2 id="idea配置导入git"><a href="#idea配置导入git" class="headerlink" title="idea配置导入git"></a>idea配置导入git</h2><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/8/20210908175717.gif" alt="菜单文件2"></p><p>这个是教程给出的，我好像没设置过这一步，我的idea直接就可以使用git的了，如果不能正常使用git的话，那么建议不要跳过这一部分，如果git正常使用就直接略过这里吧····</p><h2 id="给项目进行git仓库初始化"><a href="#给项目进行git仓库初始化" class="headerlink" title="给项目进行git仓库初始化"></a>给项目进行git仓库初始化</h2><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/8/20210908175727.gif" alt="菜单文件2"></p><p>一般上面的步骤完成之后，验证git仓库是否创建成功可以右键项目文件夹看有没有git选项：</p><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/8/20210908175732.png" alt="image-20210908162242938"></p><h2 id="熟悉idea的git版本管理，配置GitHub仓库且上传项目"><a href="#熟悉idea的git版本管理，配置GitHub仓库且上传项目" class="headerlink" title="熟悉idea的git版本管理，配置GitHub仓库且上传项目"></a>熟悉idea的git版本管理，配置GitHub仓库且上传项目</h2><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/8/20210908175755.gif" alt="菜单文件2"></p><p>通过上面的操作过程我们可以发现，我们如果要将项目推送到GitHub仓库的话，那么我们就需要GitHub仓库的仓库地址，还有一个就是GitHub账号的token令码。</p><h2 id="创建GitHub仓库和创建GitHub的token令牌"><a href="#创建GitHub仓库和创建GitHub的token令牌" class="headerlink" title="创建GitHub仓库和创建GitHub的token令牌"></a>创建GitHub仓库和创建GitHub的token令牌</h2><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/8/20210908175812.gif" alt="菜单文件2"></p><blockquote><p>为什么需要token令牌？因为我尝试使用账号、密码进行登录的时候idea给我报错404，后来使用token的方法来和GitHub进行连接就可以了，所以我还是推荐使用token的方法来配置GitHub账号。</p></blockquote><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p>因为我的idea已经和GitHub进行过链接，我已经配置好了token，所以后面我直接push项目到GitHub上就直接上传了，没有弹出账号配置。不过一般都没有什么问题，只要拥有新建的仓库地址和建立的token，后面按照要求一步一步的进行配置就能够将项目上传到GitHub上。push成功之后就到GitHub的仓库中查看，看有没有上传成功，看到仓库上有文件的话就说明idea的git和GitHub的配置基本完成了。</p><h2 id="参考材料"><a href="#参考材料" class="headerlink" title="参考材料"></a>参考材料</h2><p>由于我的笔记更适合我个人来理解，其中疏漏了许多的细节，因此请查阅我这篇笔记的一手资料进行补漏。</p><ul><li><a href="https://blog.csdn.net/u014175572/article/details/55510825">github获取token</a></li><li><a href="https://blog.csdn.net/a749402932/article/details/107148373/">IDEA 使用Git图文详解</a></li><li><a href="https://blog.csdn.net/vast_lee/article/details/111254157">IDEA 连接github 出错 invalid authentication data. 404 Not Found-Not Foun</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>remote: Support for password authentication was removed on August 13, 2021.</title>
      <link href="2021/09/26/GitHub/remote-Support-for-password-authentication-was-removed-on-August-13-2021/"/>
      <url>2021/09/26/GitHub/remote-Support-for-password-authentication-was-removed-on-August-13-2021/</url>
      
        <content type="html"><![CDATA[<h1 id="发现错误"><a href="#发现错误" class="headerlink" title="发现错误"></a>发现错误</h1><p>我在写hexo博客的时候一般都有一个备份的习惯，就在这次我完成了Nothinglin主题的开发时，将博客主题移至现在这个博客中进行发布且备份时发现，<code>hexo b</code>不能正常备份到我的GitHub仓库中的brandName分支上。</p><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/26/20210926160202.png" alt="image-20210926153905171"></p><p>首先肯定的是这次备份失败了，但是是什么原因导致失败的呢？仔细阅读了一下那几句英语发现：</p><p><code>remote: Support for password authentication was removed on August 13, 2021.</code></p><blockquote><p>2021年8月13号开始，GitHub客户端不支持密码登录了，我们在客户端不能用密码进行登录验证了，必须要创建一个token指令替代密码！！</p></blockquote><br/><h1 id="错误分析"><a href="#错误分析" class="headerlink" title="错误分析"></a>错误分析</h1><p>一开始没有发现：</p><p><code>Please use a personal access token instead</code></p><p>这句话，也就是说用token替换掉密码来进行登录，所以我遇到问题的第一反应就是找度娘。等我把报错语句进行搜索之后发现了一篇处理此问题的博文：</p><blockquote><p><a href="https://blog.csdn.net/weixin_41010198/article/details/119698015">github开发人员在七夕搞事情：remote: Support for password authentication was removed on August 13, 2021.</a></p></blockquote><p>按照他的方法进行处理之后，我的hexo博客也可以进行正常备份了！</p><br/><h1 id="处理错误"><a href="#处理错误" class="headerlink" title="处理错误"></a>处理错误</h1><h3 id="创建新的token"><a href="#创建新的token" class="headerlink" title="创建新的token"></a>创建新的token</h3><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/26/20210926160208.png" alt="image-20210926154826114"></p><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/26/20210926160212.png" alt="image-20210926154943316"></p><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/26/20210926160217.png" alt="image-20210926155045222"></p><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/26/20210926160220.png" alt="image-20210926155315585"></p><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/26/20210926160224.png" alt="image-20210926155440381"></p><h3 id="重新备份和登录"><a href="#重新备份和登录" class="headerlink" title="重新备份和登录"></a>重新备份和登录</h3><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/26/20210926160228.png" alt="image-20210926155619130"></p><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/26/20210926160231.png" alt="image-20210926155736722"></p><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/26/20210926160235.png" alt="image-20210926155818849"></p><p><img src="https://nothinglin.coding.net/p/picture/d/picture/git/raw/master/2021/9/26/20210926160239.png" alt="image-20210926160013617"></p><p>所以到这里就差不多解决了这个问题了，为了防止以后还会出现这种情况，在这里以博客的形式记录下来了。</p>]]></content>
      
      
      <categories>
          
          <category> GitHub收集录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github报错 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo主题coolshell使用说明</title>
      <link href="2021/05/02/Hexo/Hexo%E4%B8%BB%E9%A2%98coolshell%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
      <url>2021/05/02/Hexo/Hexo%E4%B8%BB%E9%A2%98coolshell%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>截止至今天，CoolShell主题还处在完善当中，虽然现在我使用的主题就是我参考CoolShell官网开发的一套Hexo主题，但是我的主题代码还没有进行完善和优化，有许多的功能还未开发，所以还是一种比较不完善的状态当中。</p><p>我是因为在Hexo官网中找不到一个自己喜欢的主题，然而偶然进入陈皓前辈的官网中时，被前辈的博客主题样式给吸引了。整体给我的感觉就是非常简洁，很干净，很适合阅读。所以，我就非常希望能够有一个这样的主题，可以前辈的主题是power by wordpress的。目前来说，我并没有服务器，所以我只能搭建一些静态博客而已，但是又没办法，我是真的非常喜欢这个主题，于是就有了自己搭建一个hexo主题的想法。</p><p>其实这个想法并不是这个时候才有的，其实很早的时候就有了，大概是在大一那时候吧，那时候在B站观看了程序羊的博客搭建视频系列，于是之后就开始入坑博客了。对于我们学生党来说，静态博客是最实惠的，可惜的是但是不懂得进行博客速度的优化，还有一直很不满意现有主题库中的主题。于是大一的时候就将博客部署到gitee上就没再折腾了。</p><p>大二之后又开始接触Hexo博客，其实前段时间是准备放弃hexo的，因为我开始接触到了非常多的静态博客框架，比如Hugo、vuepress、Hexo、gitbook、Docusaurus、Pelican、Jekyll还有盖茨比等等这些博客框架。但是综合来说吧，Hexo的教程比较多还有就是主题选择也比较多，苦于不了解hexo的运行机制和接口罢了。</p><p>其实有很多的博客主题是改一改就能够满足自己的需求的，但是不会改，不懂得这个博客主题的接口设计。所以一直就没有过一个满意的博客主题，再到后来随着对前端知识的稍微深入理解，我开始学会了使用浏览器的开发者工具来进行前端代码CSS的调试之后，我开始具备改造博客主题的能力了，大概也就是四五个月前吧。</p><p>于是我就开始疯狂搜索有关hexo博客改造的博文进行参考和学习，其实大概知道怎么一回事之后，便开始有了想自己亲手创建一个主题的想法。忘记从哪里看到的一句话：</p><blockquote><p>“想要了解一只青蛙光是解剖还是不够的，你必须要去制造一只青蛙”</p></blockquote><p>改造博客主题其实是很容易的，其实大部分规范化开发的主题都是没有使用！important这个属性来声明CSS样式的，因为这样可以方便别人后面的修改，用于覆盖已经设置好的CSS属性，我就是这样子进行博客改造的，首先就是先使用开发者工具进行调试，将需要的样式调整好之后，再重新创建一个自定义css样式文件到主题开发文件夹theme的css文件夹中，并且在这个主题文件夹的头文件中将自定义css文件进行引入，然后对原css进行覆盖，如果覆盖不了的就使用！important属性来强制覆盖。</p><p>也就在一个月前，我对我的博客稍微满意的时候（使用的是fluid主题），我看到了CoolShell官网的主题，这下我对我原有的博客主题又开始不满意了。可能因为我太喜欢CoolShell这个主题了，所以我花了两三天的时间对博客主题开发进行研究，主要是调查两个方面：</p><ul><li>主题开发的难度大不大</li><li>主题开发的资料多不多</li></ul><p>好在我在谷歌搜索的时候，有许多前辈毫不吝啬地分享了他们hexo主题开发地经验和总结，他们也提醒了我hexo官网地主题开发说明文档还有建议最好是先多看现有地主题源码，看看别人是怎么实现博客功能的。</p><p>我觉得源码参考非常重要，我到主题官网中找了非常多的主题进行比对，最后我发现<code>hexo-theme-snippet</code>这个主题是对接近CoolShell的，并且使用的文件是EJS格式的文件，这样的话我也可以看得懂，因为EJS和HTML文件的格式是非常相近的。于是<code>hexo-theme-snippet</code>和hexo官方文档说明便是我的主题开发的一手资料。</p><p>其实想真正徒手开发难度是非常大的，比如很多样式排版、代码高亮、站内搜索功能、代码优化等等这些功能，像我这种只有一点前端基础能力的人是不可能做到徒手开发完整的主题功能的。好在其实在开发主题过程中是有非常多的插件给我们直接使用的，这样就大大节省了我们的开发成本。</p><p>比如，代码框高亮，就像你能够在我的博客文章中看到的代码块高亮的样式，是不是很炫酷？是不是跟CoolShell官网的样式一模一样？其实这个代码块高亮的样式是有现成的插件给我们使用的，只不过更倾向于wordpress这样的博客，对wordpress其实已经有了现成的插件，Hexo的话是没有的，我大概花了两三天的时间来对hexo博客进行对接Enlighter.js的接口。官网：<a href="https://github.com/EnlighterJS/EnlighterJS">Enlighter.js</a></p><p>能够发现这个插件也是多亏了开发者工具，我看见CoolShell官网中的源文件的名字是Enlighter.min.css，看到这个我立刻明白，这肯定是一款插件。照着名字取谷歌搜索了一下，果然发现了它是开源插件，当时可把我高兴坏了。</p><p>就这样我咬着牙坚持了半个多月的开发，终于初步完成了主题的整体架构。但是缺点却还是有非常多的，还有bug：</p><ul><li>还未支持手机端的响应式显示</li><li>代码整体呈现凌乱，配置文件接口还没配置</li><li>潜在的bug还有非常多，只是暂时还没发现</li></ul><h3 id="使用这个主题"><a href="#使用这个主题" class="headerlink" title="使用这个主题"></a>使用这个主题</h3><p>Hexo-theme-CoolShell还没有正式上线，如果目前你对这个主题感兴趣的话，我也非常欢迎大家使用，最好是能有小伙伴一起参与博客的完善。</p><p>官网：<a href="https://github.com/Nothing-lin/hexo-theme-coolshell">https://github.com/Nothing-lin/hexo-theme-coolshell</a></p><p>首先是把主题下载到本地中，在这里默认你已经会搭建Hexo博客了，并且知道如何更换Hexo主题。如果有小伙伴还不知道的话，我后期也会专门写一些我个人理解的教程给大家参考。</p><p>安装相关依赖</p><pre data-enlighter-language="bash">//这个是关于相关文章的插件，如果没有的话那么文章页面会进不去npm install hexo-related-popular-posts --save//这个是博客站内搜索引擎，如果没有的话就不能进行站内搜索npm hexo-generator-search --save</pre><pre data-enlighter-language="bash">//这个是关于静态资源文件的压缩，目的是为了能够优化hexo的访问速度npm hexo-neat --save</pre><p>对于neat这个插件需要在全局配置文件中添加：</p><pre data-enlighter-language="yml"># hexo-neat# md博文压缩neat_enable: true# 压缩html（ejs，swig等也属于html格式片段）neat_html:  enable: true  exclude:# 压缩cssneat_css:  enable: true  exclude:    - '*.min.css'    - '**/*.min.css'# 压缩jsneat_js:  enable: true  mangle: true #打印日志  output:  compress:  exclude: #排除文件    - '*.min.js'    - '**/*.min.js'</pre><p>还有的就是，对于全局配置文件中，我们需要把hexo的默认高亮代码给关闭，因为Enlighter.js和hexo的highlight是冲突的，所以我们需要关闭：</p><pre data-enlighter-language="yml">highlight:  enable: false  line_number: false  auto_detect: false  tab_replace: ''  wrap: false  hljs: falseprismjs:  enable: false  preprocess: false  line_number: false  tab_replace: ''</pre><p>所以，完成了上面的这些步骤之后，只要是按照正常流程更换hexo博客主题的，都能够正常显示主题的样式了。</p><blockquote><p>我想说的是，目前这个主题还处于初步完善阶段，还有非常多的bug和没有优化的地方，手机端更是没有响应式功能，目前我还在学习当中，并且更新速度也不会像以前那么快了，主要是慢慢进行完善，我现在也开始使用这个主题了。</p></blockquote><p>如果有小伙伴还不清楚如何搭建博客或者是如何使用我这个博客的话，大家可以再等一等哈，我后面知识积累的足够的时候我会写一些hexo系列的文章，如果大家有问题在留言中得不到回复的话，大家可以到我GitHub开放的issues上进行提问，我有时间并且能回复的我一定尽力回复，回复不了的也希望大家多多体谅。</p><blockquote><p><a href="https://github.com/Nothinglin-Study-Project/Open-Issues/issues">点击链接前往提问或留言</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CoolShell主题说明 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
